tokenSecret = aaj23lwke5334
server.servlet.context-path=/yoniwitz

#db configs:
spring.jpa.hibernate.ddl-auto = update
#spring.datasource.username = yoniwitz
#spring.datasource.password = JONath23!@

#uncomment for h2:
spring.h2.console.enabled=true

#for mysql:
#spring.datasource.url = jdbc:mysql://localhost:3306/photo_app

#To log the sql queries in console:
logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE
spring.jpa.properties.hibernate.format_sql = true

#Messages:
userController.Swagger.GetUser.value = Get User 
userController.Swagger.GetUser.notes = Returns User details by id

userController.Swagger.GetUsers.value = Get all Users
userController.Swagger.GetUsers.notes = Returns all Users, takes limit and page

userController.Swagger.GetUserAddress.value = Get Address associated to User
userController.Swagger.GetUserAddress.notes = Returns a single Address of a User by Address id

userController.Swagger.GetUserAddresses.value = Get all Addresses associated to User
userController.Swagger.GetUserAddresses.notes = Returns all Addresses of a user by User id

userController.Swagger.UpdateUser.value = Update existing User
userController.Swagger.UpdateUser.notes = To update a User. Only fields allowed are first and last name

userController.Swagger.CreateUser.value = Create New User
userController.Swagger.CreateUser.notes = To create User. must provide: email, first name, last name and password. Address is optional

userController.Swagger.DeleteUser.value = Delete Existing User
userController.Swagger.DeleteUser.notes = To delete User by id

loginController.Swagger.Login.value = User login
loginController.Swagger.Login.notes = Login from here. must provide email and password. Returns token